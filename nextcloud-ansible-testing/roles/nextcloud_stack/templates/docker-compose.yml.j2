version: "3.9"

networks:
  default:
    name: {{ stack_network }}

services:
  db:
    image: {{ postgres_image }}
    container_name: {{ compose_project_name }}-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: "{{ vault_pg_db }}"
      POSTGRES_USER: "{{ vault_pg_user }}"
      POSTGRES_PASSWORD: "{{ vault_pg_password }}"
      TZ: "{{ timezone }}"
    volumes:
      - "{{ pg_data_dir }}:/var/lib/postgresql/data{% if ansible_os_family == 'RedHat' and selinux_enabled %}:Z{% endif %}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U {{ vault_pg_user }} -d {{ vault_pg_db }}"]
      interval: 10s
      timeout: 5s
      retries: 10

  {% if redis_enabled %}
  redis:
    image: {{ redis_image }}
    container_name: {{ compose_project_name }}-redis
    restart: unless-stopped
    command: ["redis-server", "--appendonly", "yes"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 10
  {% endif %}

  # Nextcloud Apache (serves HTTP on :80 inside the container)
  nextcloud:
    image: {{ nextcloud_image }}
    container_name: {{ compose_project_name }}-app
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      {% if redis_enabled %}
      redis:
        condition: service_started
      {% endif %}
    environment:
      POSTGRES_HOST: "db"
      POSTGRES_DB: "{{ vault_pg_db }}"
      POSTGRES_USER: "{{ vault_pg_user }}"
      POSTGRES_PASSWORD: "{{ vault_pg_password }}"
      NEXTCLOUD_ADMIN_USER: "{{ vault_nextcloud_admin_user }}"
      NEXTCLOUD_ADMIN_PASSWORD: "{{ vault_nextcloud_admin_pass }}"
      NEXTCLOUD_TRUSTED_DOMAINS: "{{ nextcloud_trusted_domains | join(' ') }}"
      OVERWRITEHOST: "{{ nextcloud_overwrite_host }}"
      OVERWRITEPROTOCOL: "{{ nextcloud_overwrite_protocol }}"
      OVERWRITECLIURL: "{{ nextcloud_overwrite_cli_url }}"
      TRUSTED_PROXIES: "{{ trusted_proxies_cidrs | join(',') }}"
      {% if redis_enabled %}REDIS_HOST: "redis"{% endif %}
      PHP_MEMORY_LIMIT: 1024M
      TZ: "{{ timezone }}"
    volumes:
      - "{{ nc_app_dir }}:/var/www/html{% if ansible_os_family == 'RedHat' and selinux_enabled %}:Z{% endif %}"
      - "{{ nc_data_dir }}:/var/www/html/data{% if ansible_os_family == 'RedHat' and selinux_enabled %}:Z{% endif %}"

  {% if reverse_proxy == 'nginx' %}
  # Local HTTPS: 443 on host => NGINX => nextcloud:80
  nginx:
    image: {{ nginx_image }}
    container_name: {{ compose_project_name }}-nginx
    restart: unless-stopped
    depends_on:
      - nextcloud
    ports:
      - "{{ nginx_bind_ip }}:{{ nginx_https_port }}:443"
      - "{{ nginx_bind_ip }}:{{ nginx_http_port }}:80"
    volumes:
      - "{{ nginx_dir }}/nginx.conf:/etc/nginx/nginx.conf{% if ansible_os_family == 'RedHat' and selinux_enabled %}:Z{% endif %}"
      - "{{ nginx_dir }}/certs:/etc/nginx/certs:ro{% if ansible_os_family == 'RedHat' and selinux_enabled %}:Z{% endif %}"
  {% endif %}

  {% if cloudflared_enabled %}
  # Public HTTPS via Cloudflare Tunnel -> http://nextcloud:80
  cloudflared:
    image: {{ cloudflared_image }}
    container_name: {{ compose_project_name }}-cloudflared
    restart: unless-stopped
    depends_on:
      - nextcloud
    command: ["tunnel", "run"]
    environment:
      TUNNEL_TOKEN: "{{ vault_cloudflared_tunnel_token }}"
  {% endif %}
