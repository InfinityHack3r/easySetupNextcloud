version: "3.9"

services:
  db:
    image: {% if container_runtime == 'podman' %}docker.io/library/{% endif %}postgres:{{ postgres_version }}
    restart: unless-stopped
    environment:
      POSTGRES_DB: {{ postgres_db }}
      POSTGRES_USER: {{ postgres_user }}
      POSTGRES_PASSWORD: {{ postgres_password }}
    volumes:
      - ./data/postgres:/var/lib/postgresql/data{% if container_runtime == 'podman' %}:Z{% endif %}
    networks: [web]

  redis:
    image: {% if container_runtime == 'podman' %}docker.io/library/{% endif %}redis:{{ redis_version }}-alpine
    restart: unless-stopped
    {% if redis_password|length > 0 %}
    command: ["redis-server", "--appendonly", "yes", "--requirepass", "{{ redis_password }}"]
    {% else %}
    command: ["redis-server", "--appendonly", "yes"]
    {% endif %}
    volumes:
      - ./data/redis:/data{% if container_runtime == 'podman' %}:Z{% endif %}
    networks: [web]

  nextcloud_app:
    image: {% if container_runtime == 'podman' %}docker.io/library/{% endif %}nextcloud:{{ nextcloud_version }}-apache
    restart: unless-stopped
    depends_on: [db, redis]
    {% if enable_local_test_port %}
    ports:
      - "127.0.0.1:8080:80"
    {% endif %}
    environment:
      # --- Database ---
      POSTGRES_HOST: db
      POSTGRES_DB: {{ postgres_db }}
      POSTGRES_USER: {{ postgres_user }}
      POSTGRES_PASSWORD: {{ postgres_password }}

      # --- Redis cache ---
      REDIS_HOST: redis
      {% if redis_password|length > 0 %}
      REDIS_HOST_PASSWORD: {{ redis_password }}
      {% endif %}

      # --- Reverse proxy awareness ---
      OVERWRITEPROTOCOL: https
      OVERWRITEHOST: {{ domain_public }}
      OVERWRITECLIURL: https://{{ domain_public }}
      TRUSTED_PROXIES: {{ trusted_proxies }}
    volumes:
      - ./data/nextcloud:/var/www/html{% if container_runtime == 'podman' %}:Z{% endif %}
    networks: [web]

  # Cloudflare Tunnel
  cloudflared:
    image: {% if container_runtime == 'podman' %}docker.io/{% endif %}cloudflare/cloudflared:latest
    restart: unless-stopped
    depends_on: [nextcloud_app]
    environment:
      TUNNEL_TOKEN: {{ tunnel_token }}
    command: tunnel --no-autoupdate --protocol http2 run
    networks: [web]

networks:
  web:
    driver: bridge
    ipam:
      config:
        - subnet: {{ network_subnet }}
