[Unit]
Description=Nextcloud stack ({{ container_runtime|title }}) â€” clean start/stop with prune
After=network-online.target {% if container_runtime == 'docker' %}docker.service{% else %}multi-user.target{% endif %}
Wants=network-online.target
{% if container_runtime == 'docker' %}
Requires=docker.service
{% endif %}

[Service]
{% if use_service_user %}
# Rootless Podman configuration
User={{ service_user }}
Group={{ service_user }}
Environment=DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/%U/bus
Environment=XDG_RUNTIME_DIR=/run/user/%U
{% endif %}
Type=oneshot
RemainAfterExit=yes
Environment=COMPOSE_PROJECT_NAME={{ compose_project_name }}
Environment=COMPOSE_FILE={{ project_dir }}/docker-compose.yml
WorkingDirectory={{ project_dir }}
{% if use_service_user %}
Environment=PATH=/usr/local/bin:/usr/bin:/bin
{% endif %}

# --- PRE-START CLEANUP (handles unclean previous shutdowns) ---
# Try a graceful compose down first
ExecStartPre=/bin/sh -lc '{% if not use_service_user %}/usr/bin/{% endif %}{{ compose_command }} -f "$COMPOSE_FILE" down --timeout 25 --remove-orphans || true'
{% if container_runtime == 'podman' %}
# Force-remove any lingering containers for this project (Podman labels)
ExecStartPre=/bin/sh -lc '{% if not use_service_user %}/usr/bin/{% endif %}{{ container_runtime }} ps -aq --filter "label=io.podman.compose.project=$COMPOSE_PROJECT_NAME" | xargs -r {% if not use_service_user %}/usr/bin/{% endif %}{{ container_runtime }} rm -f || true'
{% else %}
# Force-remove any lingering containers for this project (Docker labels)
ExecStartPre=/bin/sh -lc '{% if not use_service_user %}/usr/bin/{% endif %}{{ container_runtime }} ps -aq --filter "label=com.docker.compose.project=$COMPOSE_PROJECT_NAME" | xargs -r {% if not use_service_user %}/usr/bin/{% endif %}{{ container_runtime }} rm -f || true'
{% endif %}
# Remove the project network if it still exists
ExecStartPre=/bin/sh -lc '{% if not use_service_user %}/usr/bin/{% endif %}{{ container_runtime }} network ls --format "{{.Name}}" | grep -x "$COMPOSE_PROJECT_NAME_web" >/dev/null 2>&1 && {% if not use_service_user %}/usr/bin/{% endif %}{{ container_runtime }} network rm "$COMPOSE_PROJECT_NAME_web" || true'

# --- START ---
ExecStart={% if not use_service_user %}/usr/bin/{% endif %}{{ compose_command }} -f "$COMPOSE_FILE" up -d

# --- STOP ---
ExecStop=/bin/sh -lc '{% if not use_service_user %}/usr/bin/{% endif %}{{ compose_command }} -f "$COMPOSE_FILE" down --timeout 25 --remove-orphans || true'

{% if container_runtime == 'podman' and use_service_user %}
# --- POST-STOP CLEANUP for Podman ---
ExecStopPost=/bin/sh -lc '{{ container_runtime }} system prune -f || true'

Restart=on-failure
TimeoutStartSec=0
TimeoutStopSec=90
{% endif %}

[Install]
WantedBy=multi-user.target
