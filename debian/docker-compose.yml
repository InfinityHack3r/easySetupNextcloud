version: "3.9"

services:
  db:
    image: postgres:${POSTGRES_VERSION}
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    networks: [web]

  redis:
    image: redis:${REDIS_VERSION}-alpine
    restart: unless-stopped
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - ./data/redis:/data
    networks: [web]

  # Nextcloud runs on HTTP:80 internally (no local TLS)
  nextcloud_app:
    image: nextcloud:${NEXTCLOUD_VERSION}-apache
    restart: unless-stopped
    depends_on: [db, redis]
    environment:
      # --- Database ---
      POSTGRES_HOST: db
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}

      # --- Reverse proxy awareness (public users come via Cloudflare HTTPS) ---
      OVERWRITEPROTOCOL: https
      OVERWRITEHOST: ${NEXTCLOUD_DOMAIN}
      OVERWRITECLIURL: https://${NEXTCLOUD_DOMAIN}
      TRUSTED_PROXIES: ${TRUSTED_PROXIES}

      # --- Redis cache ---
      REDIS_HOST: redis
    volumes:
      - ./data/nextcloud:/var/www/html
    networks: [web]

  # Cloudflare Tunnel (egress on TCP 443 using HTTP/2)
  cloudflared:
    image: cloudflare/cloudflared:latest
    restart: unless-stopped
    depends_on: [nextcloud_app]
    environment:
      TUNNEL_TOKEN: ${TUNNEL_TOKEN}
    # Force TCP/443 egress to Cloudflare
    command: tunnel --no-autoupdate --protocol http2 run
    networks: [web]

networks:
  web:
    driver: bridge
    ipam:
      config:
        - subnet: ${NETWORK_SUBNET}
